package br.ufes.informatica.doeLivros.core.application;

import java.util.Date;

import javax.ejb.EJB;
import javax.ejb.EJBException;
import javax.ejb.Stateless;

import br.ufes.inf.nemo.jbutler.ejb.persistence.exceptions.MultiplePersistentObjectsFoundException;
import br.ufes.inf.nemo.jbutler.ejb.persistence.exceptions.PersistentObjectNotFoundException;
import br.ufes.informatica.doeLivros.core.domain.User;
import br.ufes.informatica.doeLivros.core.exceptions.EmailInUseException;
import br.ufes.informatica.doeLivros.core.persistence.UserDAO;
import br.ufes.informatica.doeLivros.people.persistence.AddressDAO;

/** TODO: generated by FrameWeb. Should be documented. */
@Stateless
public class RegisterServiceBean implements RegisterService {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private UserDAO userDAO;
	
	@EJB
	private AddressDAO addressDAO;

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public void register(User user) throws EmailInUseException {
		// FIXME: auto-generated method stub
		 try {
			 userDAO.getUserByEmail(user.getEmail());
		      throw new EmailInUseException(user.getEmail());
		    } catch (PersistentObjectNotFoundException e) {
		      // This is the expected outcome. Just log that everything is OK.
		    } catch (MultiplePersistentObjectsFoundException e) {
		      // This is a severe problem: the unique constraint has already been violated.
		      throw new EJBException(e);
		    }

		Date data = new Date();
		user.setRegistrationDate(data);
		userDAO.save(user);
		addressDAO.save(user.getTarget());
	}

}