package br.ufes.informatica.doeLivros.core.controller;

import java.io.IOException;

import javax.ejb.EJB;
import javax.enterprise.context.SessionScoped;
import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;
import javax.inject.Named;

import br.ufes.inf.nemo.jbutler.ejb.controller.JSFController;
import br.ufes.informatica.doeLivros.core.application.AuthenticateService;
import br.ufes.informatica.doeLivros.core.domain.User;

/** TODO: generated by FrameWeb. Should be documented. */
@Named @SessionScoped
public class AuthenticateController extends JSFController {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@EJB
	private AuthenticateService authenticateService;
	
//	private RegisterController registerController;

	/** TODO: generated by FrameWeb. Should be documented. */
	private String email;

	/** TODO: generated by FrameWeb. Should be documented. */
	private String password;

	/** TODO: generated by FrameWeb. Should be documented. */
	private User user;

	/** TODO: generated by FrameWeb. Should be documented. */
	public String validate() {
		// FIXME: auto-generated method stub
		this.user = this.authenticateService.authenticate(this.email, this.password);
		this.password = "";
		if (user==null) {
		    FacesContext.getCurrentInstance().addMessage(null,
			new FacesMessage(FacesMessage.SEVERITY_ERROR, "Teste retorno", ""));
		return null;
		}
		else
		return "/index.xhtml?faces-redirect=true";
	}
		

	/** Getter for email. */
	public String getEmail() {
		return email;
	}

	/** Setter for email. */
	public void setEmail(String email) {
		this.email = email;
	}

	/** Getter for password. */
	public String getPassword() {
		return password;
	}

	/** Setter for password. */
	public void setPassword(String password) {
		this.password = password;
	}

	/** Getter for user. */
	public User getUser() {
		return user;
	}

	/** Setter for user. */
	public void setUser(User user) {
		this.user = user;
	}
	public void checkAlreadyLoggedin() throws IOException {
	
		if (this.user == null) {
			FacesContext.getCurrentInstance().getExternalContext().redirect("core/login/index.xhtml");
		}
	}
	
	public void logout() throws IOException {
		this.user = null;
		this.email = "";
		this.password = "";
		FacesContext.getCurrentInstance().getExternalContext().redirect("index.xhtml");
	}

}