package br.ufes.informatica.doeLivros.core.persistence;


import java.util.List;

import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;
import javax.persistence.metamodel.EntityType;

import br.ufes.inf.nemo.jbutler.ejb.persistence.BaseJPADAO;
import br.ufes.inf.nemo.jbutler.ejb.persistence.exceptions.MultiplePersistentObjectsFoundException;
import br.ufes.inf.nemo.jbutler.ejb.persistence.exceptions.PersistentObjectNotFoundException;
import br.ufes.informatica.doeLivros.core.domain.Permission;
import br.ufes.informatica.doeLivros.core.domain.Role;
import br.ufes.informatica.doeLivros.core.domain.User;

/** TODO: generated by FrameWeb. Should be documented. */
@Stateless
public class RoleDAOJPA extends BaseJPADAO<Role> implements RoleDAO {
	/** Serialization id (using default value, change if necessary). */
	private static final long serialVersionUID = 1L;

	/** TODO: generated by FrameWeb. Should be documented. */
	@PersistenceContext
	private EntityManager entityManager;

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	protected EntityManager getEntityManager() {
		return entityManager;
	}

	/** TODO: generated by FrameWeb. Should be documented. */
	@Override
	public List<Role> getRoleByPermission(Permission permission) {
		// FIXME: auto-generated method stub
		return null;
	}
	
	 @Override
	 public Role retrieveByName(String name) throws PersistentObjectNotFoundException, MultiplePersistentObjectsFoundException {
	 
	    CriteriaBuilder cb = entityManager.getCriteriaBuilder();
	    CriteriaQuery<Role> cq = cb.createQuery(Role.class);
	    Root<Role> root = cq.from(Role.class);

	    EntityType<Role> model = root.getModel();
	    cq.where(cb.equal(root.get(model.getSingularAttribute("name")), name));
	    //cq.where(cb.equal(root.get(Role_.name), name));
	    Role result = executeSingleResultQuery(cq, name);
	    return result;
	  }

}